@page "/"
@using PirarteTreassure.Classes;
@using PirarteTreassure.Classes.Items.Consumables;
@using PirarteTreassure.Extensions;
@using PirarteTreassure.Interfaces;
@inject GameEngine ge

<div class="d-flex justify-content-between">
    <img src="pirate.png" />
    <img src="monster.png" />
</div>

<h1>Game</h1>
@if (ge.Adversaries.Count == 0)
{
    <button class="btn btn-primary" @onclick="() => IsFightOn = ge.Challenge()">Challenge</button>
}
@if (ge.Adversaries.Count > 0)
{
    <button class="btn btn-danger" @onclick="() => ge.Attack()">Hero Attack</button>
}

@if (ge.Shop.Count > 0)
{
    <h3>Shop</h3>
    <h4>@ge.Message</h4>
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Size</th>
                <th>Weight</th>
                <th>Price</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in ge.Shop.Get(ge.Hero.Gold))
            {
                <tr>
                    <td>@item.Name</td>
                    <td>@item.Size</td>
                    <td>@item.Weight</td>
                    <td>@item.Price</td>
                    <td>
                        @if (item.CanBuy)
                        {
                            <button class="btn btn-success" @onclick="() => ge.Shop.Buy(ge.Hero, item)">Buy</button>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>

}

<h3>Battle Log</h3>
<table class="table">
    <thead>
        <tr>
            <th>Attacker</th>
            <th>HP</th>
            <th>Adversary</th>
            <th>HP</th>
            <th>Damage</th>
            <th>Status</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var attack in ge.BattleLog.ReverseTake(5))
        {
            <tr>
                <td>
                    <img style="width:50px;" src="@attack.AttackerAvatar" />
                    @attack.Attacker
                </td>
                <td>@attack.AttackerHP</td>
                <td>
                    <img style="width:50px;" src="@attack.AdversaryAvatar" />
                    @attack.Adversary
                </td>
                <td>@attack.AdversaryHP</td>
                <td>@attack.Damage</td>
                <td>@attack.Message</td>
            </tr>
        }
    </tbody>
</table>

<button @onclick="() => showInverntory = !showInverntory" type="button" class="btn btn-outline-success mt-3" data-bs-toggle="button">Toggle button</button>
@if (showInverntory && ge.Hero.Backpack is not null)
{
    <h3>Hero's backpack</h3>
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Size</th>
                <th>Weight</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>Gold</td>
                <td>@ge.Hero.Gold</td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <td>Free Weight</td>
                <td></td>
                <td>@ge.Hero.Backpack.FreeWeight / @ge.Hero.Backpack.MaxWeight</td>
                <td></td>
            </tr>
            <tr>
            <td>Free Space</td>
                <td></td>
                <td>@ge.Hero.Backpack.FreeSpace / @ge.Hero.Backpack.MaxSize</td>
                <td></td>
            </tr>
            <tr>
                <td>HP @(ge.Hero.Name)</td>
                <td></td>
                <td>@ge.Hero.HP</td>
                <td></td>
            </tr>

            @foreach (var item in ge.Hero.Backpack.GetItems())
            {
                <tr>
                    <td>@item.Name</td>
                    <td>@item.Size</td>
                    <td>@item.Weight</td>
                    <td>
                        @if (item.GetType() == typeof(HealthPotion))
                        {
                            <button class="btn btn-danger" @onclick="() => ge.DrinkPotion((HealthPotion)item)">Drink</button>
                        }
                        <button class="btn btn-primary" @onclick="() => ge.Shop.Sell(ge.Hero, item)">Sell</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<h3 class="mt-3">Looted Items</h3>
<table class="table">
    <thead>
        <tr>
            <th>Name</th>
            <th>Size</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @if (ge.LootedItems.Gold > 0)
        {
            <tr>
                <td>Gold</td>
                <td>@ge.LootedItems.Gold</td>
                <td>
                    <button class="btn btn-primary" @onclick="() => ge.LootedItems = ge.Hero.PickUp(ge.LootedItems)">Click me</button>
                </td>
            </tr>
        }
        @foreach (var item in ge.LootedItems.Items)
        {
            <tr>
                <td>@item.Name</td>
                <td>@item.Size</td>
                <td>
                    <button class="btn btn-primary" 
                    @onclick="() => 
                    {
                        ge.Hero.AddToBackpack(item);
                        ge.RemoveFromLoot(item);
                    }">Click me</button>

                </td>
            </tr>
        }
    </tbody>
</table>


@code{
    //Backpack<IItem> LootedItems { get; set; } = new();
    bool IsFightOn = false, showInverntory = false;
}
